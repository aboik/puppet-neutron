[ml2_cisco]

# (StrOpt) A short prefix to prepend to the VLAN number when creating a
# VLAN interface. For example, if an interface is being created for
# VLAN 2001 it will be named 'q-2001' using the default prefix.
# The total length allowed for the prefix name and VLAN is 32 characters,
# the prefix will be truncated if the total length is greater than 32.
#
# vlan_name_prefix = q-
# Example: vlan_name_prefix = vnet-
<%= "vlan_name_prefix = #{@vlan_name_prefix}" if defined?(@vlan_name_prefix) %>

# (BoolOpt) A flag to enable round robin scheduling of routers for SVI.
# svi_round_robin = False
<%= "svi_round_robin = #{@svi_round_robin}" if defined?(@svi_round_robin) %>

# (StrOpt) The name of the physical_network managed via the Cisco Nexus Switch.
# This string value must be present in the ml2_conf.ini network_vlan_ranges
# variable.
#
# managed_physical_network =
# Example: managed_physical_network = physnet1
<%= "managed_physical_network = #{@managed_physical_network}" \
     if defined?(@managed_physical_network) %>

# (StrOpt) A short prefix to prepend to the VLAN number when creating a
# provider VLAN interface. For example, if an interface is being created
# for provider VLAN 3003 it will be named 'p-3003' using the default prefix.
# The total length allowed for the prefix name and VLAN is 32 characters,
# the prefix will be truncated if the total length is greater than 32.
#
# provider_vlan_name_prefix = p-
# Example: provider_vlan_name_prefix = PV-
<%= "provider_vlan_name_prefix = #{@provider_vlan_name_prefix}" \
     if defined?(@provider_vlan_name_prefix) %>

# (BoolOpt) To make Nexus device persistent by running the Nexus
# CLI 'copy run start' after applying successful configurations.
# (default) This flag defaults to False keep consistent with
# existing functionality.
#
# persistent_switch_config = False
<%= "persistent_switch_config = #{@persistent_switch_config}" \
     if defined?(@persistent_switch_config) %>

# (IntOpt) Time interval to check the state of the Nexus device.
# (default) This value defaults to 0 seconds which disables this
# functionality.  When enabled, 30 seconds is suggested.
#
# switch_heartbeat_time = 0
<%= "switch_heartbeat_time = #{@switch_heartbeat_time}" \
     if defined?(@switch_heartbeat_time) %>

# (IntOpt) Number of times to attempt config replay with switch.
# This variable depends on switch_heartbeat_time being enabled.
# (default) This value defaults to 3
#
# switch_replay_count = 3
<%= "switch_replay_count = #{@switch_replay_count}" \
     if defined?(@switch_replay_count) %>

# (BoolOpt) A flag indicating whether OpenStack networking should manage the
# creation and removal of VLANs for provider networks on the Nexus
# switches. If the flag is set to False then OpenStack will not create or
# remove VLANs for provider networks, and the administrator needs to
# manage these interfaces manually or by external orchestration.
#
# provider_vlan_auto_create = True
<%= "provider_vlan_auto_create = #{@provider_vlan_auto_create}" \
     if defined?(@provider_vlan_auto_create) %>

# (BoolOpt) A flag indicating whether OpenStack networking should manage
# the adding and removing of provider VLANs from trunk ports on the Nexus
# switches. If the flag is set to False then OpenStack will not add or
# remove provider VLANs from trunk ports, and the administrator needs to
# manage these operations manually or by external orchestration.
#
# provider_vlan_auto_trunk = True
<%= "provider_vlan_auto_trunk = #{@provider_vlan_auto_trunk}" \
     if defined?(@provider_vlan_auto_trunk) %>

# (BoolOpt) A flag indicating whether OpenStack networking should manage the
# creating and removing of the Nexus switch VXLAN global settings of 'feature
# nv overlay', 'feature vn-segment-vlan-based', 'interface nve 1' and the NVE
# subcommand 'source-interface loopback #'. If the flag is set to False
# (default) then OpenStack will not add or remove these VXLAN settings, and
# the administrator needs to manage these operations manually or by  external
# orchestration.
#
# vxlan_global_config = True
<%= "vxlan_global_config = #{@vxlan_global_config}" \
     if defined?(@vxlan_global_config) %>

# (BoolOpt) A flag indicating whether or not to enable strict host key checks
# when connecting to Nexus switches.
#
# host_key_checks = False
<%= "host_key_checks = #{@host_key_checks}" \
     if defined?(@host_key_checks) %>

# Cisco Nexus Switch configurations.
# Each switch to be managed by Openstack Neutron must be configured here.
#
# Cisco Nexus Switch Format.
# [ml2_mech_cisco_nexus:<IP address of switch>]
# <hostname>=<intf_type:port>       (1)
# ssh_port=<ssh port>               (2)
# username=<credential username>    (3)
# password=<credential password>    (4)
# nve_src_intf=<loopback number>    (5)
# physnet=<physical network>        (6)
#
# (1) For each host connected to a port on the switch, specify the hostname
#     and the Nexus physical port (interface) it is connected to.
#     Valid intf_type's are 'ethernet' and 'port-channel'.
#     The default setting for <intf_type:> is 'ethernet' and need not be
#     added to this setting.
# (2) The TCP port for connecting via SSH to manage the switch. This is
#     port number 22 unless the switch has been configured otherwise.
# (3) The username for logging into the switch to manage it.
# (4) The password for logging into the switch to manage it.
# (5) Only valid if VXLAN overlay is configured and vxlan_global_config is
#     set to True.
#     The NVE source interface is a loopback interface that is configured on
#     the switch with valid /32 IP address. This /32 IP address must be known
#     by the transient devices in the transport network and the remote VTEPs.
#     This is accomplished by advertising it through a dynamic routing protocol
#     in the transport network. (NB: If no nve_src_intf is defined then a
#     default setting of 0 (creates "loopback0") will be used.)
# (6) Only valid if VXLAN overlay is configured.
#     The physical network name defined in the network_vlan_ranges variable
#     (defined under the ml2_type_vlan section) that this switch is controlling.
#     The configured 'physnet' is the physical network domain that is connected
#     to this switch. The vlan ranges defined in network_vlan_ranges for a
#     a physical network are allocated dynamically and are unique per physical
#     network. These dynamic vlans may be reused across physical networks.
#
# Example:
# [ml2_mech_cisco_nexus:1.1.1.1]
# compute1=1/1
# compute2=ethernet:1/2
# compute3=port-channel:1
# ssh_port=22
# username=admin
# password=mySecretPassword
# nve_src_intf=1
# physnet=physnet1

<% @nexus_config.each do |switch_hostname, switch_data| %>
[ML2_MECH_CISCO_NEXUS:<%= switch_data['ip_address'] %>]
<%- switch_data['servers'].each do |host_name, port| -%>
<%=host_name-%>=<%= port %>
<%- end -%>
ssh_port=<%= switch_data['ssh_port'] %>
username=<%= switch_data['username'] %>
password=<%= switch_data['password'] %>
nve_src_intf=<%= switch_data['nve_src_intf'] %>
physnet=<%= switch_data['physnet'] %>
<% end %>

